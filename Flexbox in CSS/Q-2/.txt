2. Explain the role the following key properties in the flexbox layout model.
a.Justify-Content
b.Align-items
c.gap
d.flex-direction
e.flex-wrap

(ANS)
Justify-Content -:
The justify-Content property in flexbox is  used to control the allignment of flex items along 
the main axis of the flex container. it determines how the extra space or insufficient space 
along the main axis is distributed . There are several values for justify-content, including flex-start,
flex-end,center,space-between,space-evenly and space around.
For Example . If you set justify-content center, flex items will be centered along the cross axis of the container. 
if you set justify-content, space-between ; the first-item will be allignd to the start, the last item to the endand the remaining 
space will be distributed evenly between the items.

Align-items -:
The Align-items property controls the alignment of flex items along the crossaxis of the flex container.
It specifies how items are positioned within along their container along the axis . it accepts values such
as flex-start,flex-end,center,baseline and stretch.
Fo instance, if you set align-items: center, flex items will be verically centered within container. if you
set align-items strtech; items will  expand to fill the entire cross-axis space of the container,ensuring they have some height.

GAP-:
The gap property plays a crucial role in the flexbox layout model by defining the spacing between
 individual flex items. It provides a convenient and efficient way to achieve consistent spacing without 
 relying on individual margins or padding on each item.
Key functions of gap property:
Simplifies spacing: 
Instead of setting margins/padding on each item, gap applies spacing to all items uniformly, 
reducing code and maintenance complexity.
Consistency across layout: 
Ensures consistent spacing regardless of the number of items or their size, creating a visually balanced layout.
Responsive layouts: 
Allows for responsive spacing adjustments based on screen size or other factors.
Flexibility and control: 
Offers separate values for row-gap and column-gap, allowing for different spacing in each direction.
Future-proof: Replaces the older grid-gap property and is supported by all modern browsers.

Flex-direction -:
The flex-direction property determines the direction in which flex items are placed within the
flex Container. It defines the main axis and, consequntly, the layout flow. It can have values such as row,
row-reverse, coluumn, or column-reverse.

Flex-wrap -:
The flex-wrap property controls whether flex items are allowed to wrap onto  multiple lines (new
rows or columns) within the flex container when they don't fit along the main axis. It accepts values like
nowrap, wrap, and wrap-reverse.
For instance, if you set flex-wrap: wrap;, flex items will wrap to the next line when there's not enough space
on the current line, creating a multi-line layout. flex-wrap is useful for accommodating various screen sizes
and orientations, allowing items to adopt to different viewports and preventing content from getting cut off.
These properties plays a crictical role in creatng well-structured and visually plesing layouts in flexbox,allowingyou to control positioning, allignment
 and spacing of flex items with in a container